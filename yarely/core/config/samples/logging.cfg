[loggers]
keys=root
# To use the logger_yarely_frontend_core_config sample below, use a keys line
# similar to:
#keys=root, yarely_frontend_core_config

[handlers]
keys=logfile, stdout

[formatters]
keys=simplistic, diagnostic

[logger_root]
level=DEBUG
handlers=logfile

# Maybe you're coding hard on yarely.core.config and would like
# to see INFO (and above) log records it creates on stdout as well as going
# to the application log file.  The following will pass INFO and above
# records to the stdout handler and because propagate is '1', the record
# will also be handled by the parent logger.
# You would also need to add 'yarely_frontend_core_config' to the list of 
# keys in the loggers section above.
#[logger_yarely_frontend_core_config]
#level=INFO
#handlers=stdout
#propagate=1
#qualname=yarely.core.config

[handler_logfile]
class=yarely.core.helpers.logging.TimedRotatingFileHandlerWithApplicationName
level=DEBUG
formatter=diagnostic
args=('yarely-local/logs/{application_name}.log', 'midnight', 1, 10)

[handler_stdout]
class=logging.StreamHandler
level=DEBUG
formatter=diagnostic
args=(sys.stdout,)

# The simplistic formatter gives only simple information (time, level, message)
[formatter_simplistic]
format=%(asctime)s %(levelname)8s %(message)s
datefmt=

# The diagnostic formatter gives slightly more diagnostic information
# (time, level, message, filename, lineno).  But this means the log
# lines are often very long.
[formatter_diagnostic]
format=%(asctime)s %(levelname)8s %(message)s    (%(pathname)s:%(lineno)d)
datefmt=
